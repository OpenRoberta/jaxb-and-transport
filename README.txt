This repository generates resources for the OpenRoberta lab. These resources change almost never. So this project is seldom used.

1. the OpenRoberta lab reads XML generated by blockly and creates an AST for further code generation.
   This process is facilitated by using jaxb2 to create a Java bean tree matching the XML tree.
   Actual Java has removed jaxb support (xjc, parts in rt.jar). Thus this project uses the ancient Java 8 for a stable build of the Java source classes.

   - after a change in the xsd found at `src/main/resources/blockly.xsd`
   - the Java bean tree has to be (re-)generated (this are Java source classes) by executing `mvn clean install` and
   - must be copied manually from `src/main/java/de/fhg/iais/roberta/blockly/generated` to the openroberta-lab project `OpenRobertaRobot`
     into the same package.

2. the OpenRoberta lab front end (written in typescript) and the back end (written in Java) communicate using POST commands in the style of REST. The
   payload of the POSTs are JSON objects. To reduce the amount of errors when these JSON objects are constructed, sent and destructed, the
   is used. The definitions of all the JSON objects are found in the resource `restEntities.json`.
   maven plugin `de.fhg.iais.tools:TransportGenerator:16.0.0` found in the maven repository
   at `https://maven.iais.fraunhofer.de/artifactory/openroberta-release`  is used as the bean generator.

   - after a change in the resource `src/main/resources/restEntities.json`
   - the Javas have to be (re-)generated (this are Java source classes) by executing `mvn clean install` and
   - must be copied manually from `src/main/java/de/fhg/iais/roberta/generated/restEntities` to the openroberta-lab project `OpenRobertaServer`
     into the same package.

If you open source developer and like to design a better solution to this please contact reinhard.budde at iais.fraunhofer.de